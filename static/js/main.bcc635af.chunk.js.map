{"version":3,"sources":["Components/filter/Filter.module.css","Components/contactForm/ContactForm .js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App.js","index.js","Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css"],"names":["module","exports","initialState","name","number","ContactForm","isThereThisContact","addContact","useState","state","setState","onHandleChange","e","target","value","prev","reset","onSubmit","preventDefault","alert","className","styles","form","label","placeholder","type","pattern","title","required","onChange","contactName","ContactList","findContact","deleteContact","style","contactList","map","contact","contactItem","contactText","id","onClick","Filter","filter","addToFilterState","filterLabel","filterInput","contacts","JSON","parse","localStorage","getItem","App","useEffect","setItem","stringify","box","some","toLowerCase","prevState","uuidv4","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcc635af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__vat2A\",\"filterLabel\":\"Filter_filterLabel__2ZJlQ\"};","import React, { useState } from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ isThereThisContact, addContact }) => {\n  const [state, setState] = useState(initialState);\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (isThereThisContact(state.name)) {\n      alert(`${state.name} is already in contacts`);\n      return;\n    }\n\n    addContact(state);\n\n    reset();\n  };\n\n  const reset = () => setState({ name: \"\", number: \"\" });\n\n  return (\n    <form onSubmit={onHandleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          placeholder=\"Jacob Mercer\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={state.name}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          placeholder=\"+38(093)223-77-88\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={state.number}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n// class ContactForm extends Component {\n// state = { name: '', number: '' };\n\n// onHandleChange = e => {\n//   const { name, value } = e.target;\n//   this.setState({ [name]: value });\n// };\n\n// onHandleSubmit = e => {\n//   e.preventDefault();\n//   if (this.props.isThereThisContact(this.state.name)) {\n//     alert(`${this.state.name} is already in contacts`);\n//     return;\n//   }\n\n//   this.props.addContact(this.state);\n\n//   this.reset();\n// };\n\n// reset = () => this.setState({ name: '', number: '' });\n\n// render() {\n//   return (\n// <form onSubmit={this.onHandleSubmit} className={styles.form}>\n//   <label className={styles.label}>\n//     Name\n//     <input\n//       placeholder=\"Jacob Mercer\"\n//       type=\"text\"\n//       name=\"name\"\n//       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//       required\n//       value={this.state.name}\n//       onChange={this.onHandleChange}\n//       className={styles.contactName}\n//     />\n//   </label>\n\n//   <label className={styles.label}>\n//     Number\n//     <input\n//       placeholder=\"+38(093)223-77-88\"\n//       type=\"tel\"\n//       name=\"number\"\n//       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//       title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//       required\n//       value={this.state.number}\n//       onChange={this.onHandleChange}\n//       className={styles.contactName}\n//     />\n//   </label>\n\n//   <button type=\"submit\">Add contact</button>\n// </form>\n//     );\n//   }\n// }\n\n// export default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ findContact, deleteContact }) => {\n  return (\n    <ul className={style.contactList}>\n      {findContact().map(contact => (\n        <li key={contact.id} className={style.contactItem}>\n          <p className={style.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" id={contact.id} onClick={deleteContact}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  findContact: PropTypes.func.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ filter, addToFilterState }) => {\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={addToFilterState}\n        className={style.filterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  addToFilterState: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./contactForm/ContactForm \";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport styles from \"./App.module.css\";\n\nconst initialState = {\n  contacts: JSON.parse(localStorage.getItem(\"contacts\")) || [],\n  filter: \"\",\n};\n\nconst App = () => {\n  const [state, setState] = useState({ ...initialState });\n  // const [first, setFirst] = useState(true);\n\n  useEffect(() => {\n    // if (first) {\n    //   setFirst(false);\n    //   return;\n    // }\n    // console.log(\"mount\");\n    localStorage.setItem(\"contacts\", JSON.stringify(state.contacts));\n  }, [state.contacts]);\n\n  const addContact = (contact) =>\n    setState((prevState) => ({\n      ...prevState,\n      contacts: [...prevState.contacts, { id: uuidv4(), ...contact }],\n    }));\n\n  const isThereThisContact = (name) =>\n    state.contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n  const deleteContact = (e) => {\n    const id = e.target.id;\n    setState((prev) => ({\n      ...prev,\n      contacts: prev.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  const addToFilterState = (e) => {\n    const filter = e.target.value;\n    setState((prev) => ({ ...prev, filter: filter }));\n  };\n\n  const findContact = () =>\n    state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(state.filter.toLowerCase())\n    );\n\n  return (\n    <>\n      <div className={styles.box}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          isThereThisContact={isThereThisContact}\n          addContact={addContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter addToFilterState={addToFilterState} filter={state.filter} />\n        <ContactList findContact={findContact} deleteContact={deleteContact} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n\n// class App extends Component {\n// state = {\n//   contacts: [],\n//   filter: \"\",\n// };\n\n// componentDidMount() {\n//   const contacts = localStorage.getItem(\"contacts\");\n//   const parseContacts = JSON.parse(contacts);\n\n//   if (parseContacts) {\n//     this.setState({ contacts: parseContacts });\n//   }\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   if (this.state.contacts !== prevState.contacts) {\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   }\n// }\n\n// addContact = (contact) =>\n//   this.setState((prevState) => ({\n//     contacts: [...prevState.contacts, { id: uuidv4(), ...contact }],\n//   }));\n\n// isThereThisContact = (name) =>\n//   this.state.contacts.some(\n//     (contact) => contact.name.toLowerCase() === name.toLowerCase()\n//   );\n\n// deleteContact = (e) => {\n//   const id = e.target.id;\n//   this.setState((prev) => ({\n//     contacts: prev.contacts.filter((contact) => contact.id !== id),\n//   }));\n// };\n\n// addToFilterState = (e) => {\n//   const filter = e.target.value;\n//   this.setState({\n//     filter: filter,\n//   });\n// };\n\n// findContact = () =>\n//   this.state.contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n//   );\n\n// render() {\n// console.log(this.deleteContact());\n// return (\n// <>\n//   <div className={styles.box}>\n//     <h1>Phonebook</h1>\n//     <ContactForm\n//       isThereThisContact={this.isThereThisContact}\n//       addContact={this.addContact}\n//     />\n\n//     <h2>Contacts</h2>\n//     <Filter\n//       addToFilterState={this.addToFilterState}\n//       filter={this.state.filter}\n//     />\n//     <ContactList\n//       findContact={this.findContact}\n//       deleteContact={this.deleteContact}\n//     />\n//   </div>\n// </>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3uF92\",\"contactName\":\"ContactForm_contactName__1y3Vt\",\"label\":\"ContactForm_label__3FEXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2y6i7\",\"contactItem\":\"ContactList_contactItem__2_Dhu\",\"contactText\":\"ContactList_contactText__1mZw7\"};"],"sourceRoot":""}